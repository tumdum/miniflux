// Code generated by go generate; DO NOT EDIT.

package database // import "miniflux.app/database"

var SqlMap = map[string]string{
	"schema_version_1": `create table schema_version (
    version text not null
);

create table users (
    id INTEGER PRIMARY KEY,
    username text not null unique,
    password text,
    is_admin bool default 'f',
    language text default 'en_US',
    timezone text default 'UTC',
    theme text default 'default',
    last_login_at timestamp with time zone
);

create table sessions (
    id serial not null,
    user_id int not null,
    token text not null unique,
    created_at timestamp default CURRENT_TIMESTAMP,
    user_agent text,
    ip text,
    primary key (id),
    unique (user_id, token),
    foreign key (user_id) references users(id) on delete cascade
);

create table categories (
    id serial PRIMARY KEY,
    user_id int not null,
    title text not null,
    unique (user_id, title),
    foreign key (user_id) references users(id) on delete cascade
);

create table feeds (
    id integer not null,
    user_id int not null,
    category_id int not null,
    title text not null,
    feed_url text not null,
    site_url text not null,
    checked_at timestamp default CURRENT_TIMESTAMP,
    etag_header text default '',
    last_modified_header text default '',
    parsing_error_msg text default '',
    parsing_error_count int default 0,
    primary key (id),
    unique (user_id, feed_url),
    foreign key (user_id) references users(id) on delete cascade,
    foreign key (category_id) references categories(id) on delete cascade
);
/*

create type entry_status as enum('unread', 'read', 'removed');
*/

create table entries (
    id bigserial not null,
    user_id int not null,
    feed_id bigint not null,
    hash text not null,
    published_at timestamp with time zone not null,
    title text not null,
    url text not null,
    author text,
    content text,
    status entry_status default 'unread',
    primary key (id),
    unique (feed_id, hash),
    foreign key (user_id) references users(id) on delete cascade,
    foreign key (feed_id) references feeds(id) on delete cascade
);
/*

create index entries_feed_idx on entries using btree(feed_id);
*/
create table enclosures (
    id bigserial not null,
    user_id int not null,
    entry_id bigint not null,
    url text not null,
    size int default 0,
    mime_type text default '',
    primary key (id),
    foreign key (user_id) references users(id) on delete cascade,
    foreign key (entry_id) references entries(id) on delete cascade
);

/*
create table icons (
    id bigserial not null,
    hash text not null unique,
    mime_type text not null,
    content bytea not null,
    primary key (id)
);

create table feed_icons (
    feed_id bigint not null,
    icon_id bigint not null,
    primary key(feed_id, icon_id),
    foreign key (feed_id) references feeds(id) on delete cascade,
    foreign key (icon_id) references icons(id) on delete cascade
);
*/
`,
	"schema_version_10": `drop table tokens;

create table sessions (
    id text not null,
    data jsonb not null,
    created_at timestamp default CURRENT_TIMESTAMP,
    primary key(id)
);
`,
	"schema_version_11": `alter table integrations add column wallabag_enabled bool default 'f';
alter table integrations add column wallabag_url text default '';
alter table integrations add column wallabag_client_id text default '';
alter table integrations add column wallabag_client_secret text default '';
alter table integrations add column wallabag_username text default '';
alter table integrations add column wallabag_password text default '';`,
	"schema_version_12": `alter table entries add column starred bool default 'f';`,
	"schema_version_13": `create index entries_user_status_idx on entries(user_id, status);
create index feeds_user_category_idx on feeds(user_id, category_id);
`,
	"schema_version_14": `alter table integrations add column nunux_keeper_enabled bool default 'f';
alter table integrations add column nunux_keeper_url text default '';
alter table integrations add column nunux_keeper_api_key text default '';`,
	"schema_version_15": `-- alter table enclosures alter column size set data type bigint;
`,
	"schema_version_16": `alter table entries add column comments_url text default '';`,
	"schema_version_17": `alter table integrations add column pocket_enabled bool default 'f';
alter table integrations add column pocket_access_token text default '';
alter table integrations add column pocket_consumer_key text default '';
`,
	"schema_version_18": `-- alter table user_sessions alter column ip set data type inet using ip::inet;
`,
	"schema_version_19": `alter table feeds add column username text default '';
alter table feeds add column password text default '';`,
	"schema_version_2": `-- create extension if not exists hstore;
alter table users add column extra hstore;
create index users_extra_idx on users (extra);
-- create index users_extra_idx on users using gin(extra);
`,
	"schema_version_20": `-- alter table entries add column document_vectors tsvector;
-- update entries set document_vectors = to_tsvector(substring(title || ' ' || coalesce(content, '') for 1000000));
-- create index document_vectors_idx on entries using gin(document_vectors);
`,
	"schema_version_21": `alter table feeds add column user_agent text default '';`,
	"schema_version_22": `-- update entries set document_vectors = setweight(to_tsvector(substring(coalesce(title, '') for 1000000)), 'A') || setweight(to_tsvector(substring(coalesce(content, '') for 1000000)), 'B');
`,
	"schema_version_23": `alter table users add column keyboard_shortcuts boolean default 't';`,
	"schema_version_3": `create table tokens (
    id text not null,
    value text not null,
    -- created_at timestamp with time zone not null default now(),
    created_at timestamp DEFAULT CURRENT_TIMESTAMP,
    primary key(id, value)
);
`,
	"schema_version_4": `-- create type entry_sorting_direction as enum('asc', 'desc');
alter table users add column entry_direction text default 'asc';
`,
	"schema_version_5": `create table integrations (
    user_id int not null,
    pinboard_enabled bool default 'f',
    pinboard_token text default '',
    pinboard_tags text default 'miniflux',
    pinboard_mark_as_unread bool default 'f',
    instapaper_enabled bool default 'f',
    instapaper_username text default '',
    instapaper_password text default '',
    fever_enabled bool default 'f',
    fever_username text default '',
    fever_password text default '',
    fever_token text default '',
    primary key(user_id)
)
`,
	"schema_version_6": `alter table feeds add column scraper_rules text default '';
`,
	"schema_version_7": `alter table feeds add column rewrite_rules text default '';
`,
	"schema_version_8": `alter table feeds add column crawler boolean default 'f';
`,
	"schema_version_9": `alter table sessions rename to user_sessions;`,
}

var SqlMapChecksums = map[string]string{
	"schema_version_1":  "9372e58dbbc9e968e9832f2fb54a33d9b109784feda26ca5b73549f51d6555af",
	"schema_version_10": "7243abda43c62e5b4969002f98ff515b80ab8a03841e4fba929d839e9883d3c4",
	"schema_version_11": "dc5bbc302e01e425b49c48ddcd8e29e3ab2bb8e73a6cd1858a6ba9fbec0b5243",
	"schema_version_12": "a95abab6cdf64811fc744abd37457e2928939d999c5ef00d2bdd9398e16f32fb",
	"schema_version_13": "9073fae1e796936f4a43a8120ebdb4218442fe7d346ace6387556a357c2d7edf",
	"schema_version_14": "4622e42c4a5a88b6fe1e61f3d367b295968f7260ab5b96481760775ba9f9e1fe",
	"schema_version_15": "3bc23b926344bbaee4092e2b2439046c7316c88dda16b39137c6128ca5d410d7",
	"schema_version_16": "9d006faca62fd7ab787f64aef0e0a5933d142466ec4cab0e096bb920d2797e34",
	"schema_version_17": "b9f15d6217275fedcf6d948dd85ebe978b869bf37f42a86fd5b50a51919fa0e1",
	"schema_version_18": "a7a37a134a270c701aa4c01ae4b01b8a330ca8d9b5802633160aa0e0a2423f66",
	"schema_version_19": "a83f77b41cc213d282805a5b518f15abbf96331599119f0ef4aca4be037add7b",
	"schema_version_2":  "6b5298cb2de365299cf0ac7a322f55fa77be2c129808c75c0b0480f058b33268",
	"schema_version_20": "5f54faad4f788c681000db2c539700b1ce27b603b76189fd22ffcb21af144896",
	"schema_version_21": "77da01ee38918ff4fe33985fbb20ed3276a717a7584c2ca9ebcf4d4ab6cb6910",
	"schema_version_22": "382f5a277bd3940322baa0398bbbb70f948b19cc77a007aa40297d58c8dc452b",
	"schema_version_23": "cb3512d328436447f114e305048c0daa8af7505cfe5eab02778b0de1156081b2",
	"schema_version_3":  "3f3cfe7f66488bf175fa9be8ab52a1f67c998de5c468943633d56f1d5a499b4e",
	"schema_version_4":  "8a5e42e2c54d46ab32f34a5ddcda55c3a145612071889f2e8c3843482c74e1c7",
	"schema_version_5":  "46397e2f5f2c82116786127e9f6a403e975b14d2ca7b652a48cd1ba843e6a27c",
	"schema_version_6":  "9d05b4fb223f0e60efc716add5048b0ca9c37511cf2041721e20505d6d798ce4",
	"schema_version_7":  "33f298c9aa30d6de3ca28e1270df51c2884d7596f1283a75716e2aeb634cd05c",
	"schema_version_8":  "9922073fc4032d8922617ec6a6a07ae8d4817846c138760fb96cb5608ab83bfc",
	"schema_version_9":  "de5ba954752fe808a993feef5bf0c6f808e0a4ced5379de8bec8342678150892",
}
